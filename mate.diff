diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/ChangeLog xfce4-xfapplet-plugin-0.1.0/ChangeLog
--- xfce4-xfapplet-plugin-0.1.0.orig/ChangeLog	2012-04-15 22:22:20.141856501 -0400
+++ xfce4-xfapplet-plugin-0.1.0/ChangeLog	2012-04-15 22:24:07.661854614 -0400
@@ -27,7 +27,7 @@
 2006-03-23 20:25  adrianob
 
 	* [r1216] panel-plugin/chooser.c, panel-plugin/xfapplet.c,
-	  panel-plugin/xfapplet.h: Help cleaning up unused GConf keys by the
+	  panel-plugin/xfapplet.h: Help cleaning up unused MateConf keys by the
 	  applets.
 
 2006-03-22 17:16  adrianob
@@ -38,7 +38,7 @@
 
 2006-03-18 16:26  adrianob
 
-	* [r1173] panel-plugin/xfapplet.c: Handle Bonobo/CORBA exceptions.
+	* [r1173] panel-plugin/xfapplet.c: Handle MateComponent/CORBA exceptions.
 
 2006-03-16 00:19  adrianob
 
@@ -102,12 +102,12 @@
 2006-02-20 23:22  adrianob
 
 	* [r1080] panel-plugin/xfapplet.c, panel-plugin/xfapplet.h: Handle the
-	  Gnome applet side of the "size-changed" signal.
+	  Mate applet side of the "size-changed" signal.
 
 2006-02-18 01:25  adrianob
 
 	* [r1064] panel-plugin/chooser.c, panel-plugin/xfapplet.c: Better
-	  handling of gconf keys for the applets.
+	  handling of mateconf keys for the applets.
 
 2006-02-17 20:58  adrianob
 
@@ -115,9 +115,9 @@
 	  panel-plugin/xfapplet.c: Several fixes and improvements: - Don't
 	  handle "save" plugin signal (saving configuration is done by the
 	  plugin itself); - Allows to choose another applet after one had
-	  already been chosen; - Use bonobo_get_object_async() and
-	  bonobo_widget_new_control_from_objref() instead of
-	  bonobo_widget_new_control_async() because the latter is buggy (Gnome
+	  already been chosen; - Use matecomponent_get_object_async() and
+	  matecomponent_widget_new_control_from_objref() instead of
+	  matecomponent_widget_new_control_async() because the latter is buggy (Mate
 	  bugzilla #331590); - Just remove previous temporary label or applet
 	  right before adding the new chosen applet.
 
@@ -128,8 +128,8 @@
 2006-02-15 22:54  adrianob
 
 	* [r1061] configure.ac, panel-plugin/xfapplet.c,
-	  panel-plugin/xfapplet.h: Don't crash on exit _and_ release Bonobo
-	  references. Also added ORBit-2.0 >= 2.12.5 as requirement because of
+	  panel-plugin/xfapplet.h: Don't crash on exit _and_ release MateComponent
+	  references. Also added MateCORBA-2.0 >= 2.12.5 as requirement because of
 	  a bug in earlier versions that showed up with the plugin.
 
 2006-02-15 15:49  adrianob
@@ -190,7 +190,7 @@
 
 2006-01-30 18:36  adrianob
 
-	* [r979] panel-plugin/xfapplet.c: Load bonobo controls (gnome applets)
+	* [r979] panel-plugin/xfapplet.c: Load matecomponent controls (mate applets)
 	  asynchronously.
 
 2006-01-28 21:03  adrianob
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/configure xfce4-xfapplet-plugin-0.1.0/configure
--- xfce4-xfapplet-plugin-0.1.0.orig/configure	2012-04-15 22:22:20.138523168 -0400
+++ xfce4-xfapplet-plugin-0.1.0/configure	2012-04-15 22:26:41.881851909 -0400
@@ -464,7 +464,7 @@
 # include <unistd.h>
 #endif"
 
-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP HAVE_CYGWIN_TRUE HAVE_CYGWIN_FALSE build build_cpu build_vendor build_os host host_cpu host_vendor host_os LN_S ECHO AR ac_ct_AR RANLIB ac_ct_RANLIB CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP F77 FFLAGS ac_ct_F77 LIBTOOL INTLTOOL_DESKTOP_RULE INTLTOOL_DIRECTORY_RULE INTLTOOL_KEYS_RULE INTLTOOL_PROP_RULE INTLTOOL_OAF_RULE INTLTOOL_PONG_RULE INTLTOOL_SERVER_RULE INTLTOOL_SHEET_RULE INTLTOOL_SOUNDLIST_RULE INTLTOOL_UI_RULE INTLTOOL_XAM_RULE INTLTOOL_KBD_RULE INTLTOOL_XML_RULE INTLTOOL_XML_NOMERGE_RULE INTLTOOL_CAVES_RULE INTLTOOL_SCHEMAS_RULE INTLTOOL_THEME_RULE INTLTOOL_SERVICE_RULE INTLTOOL_EXTRACT INTLTOOL_MERGE INTLTOOL_UPDATE INTLTOOL_PERL INTLTOOL_ICONV INTLTOOL_MSGFMT INTLTOOL_MSGMERGE INTLTOOL_XGETTEXT GETTEXT_PACKAGE USE_NLS MSGFMT GMSGFMT XGETTEXT CATALOGS CATOBJEXT DATADIRNAME GMOFILES INSTOBJEXT INTLLIBS PO_IN_DATADIR_TRUE PO_IN_DATADIR_FALSE POFILES POSUB MKINSTALLDIRS localedir XGETTEXT_ARGS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS LIBX11_CFLAGS LIBX11_LDFLAGS LIBX11_LIBS LIBSM_CFLAGS LIBSM_LDFLAGS LIBSM_LIBS PKG_CONFIG GOBJECT_VERSION GOBJECT_CFLAGS GOBJECT_LIBS GOBJECT_REQUIRED_VERSION GTK_VERSION GTK_CFLAGS GTK_LIBS GTK_REQUIRED_VERSION ORBIT2_VERSION ORBIT2_CFLAGS ORBIT2_LIBS ORBIT2_REQUIRED_VERSION LIBPANELAPPLET_VERSION LIBPANELAPPLET_CFLAGS LIBPANELAPPLET_LIBS LIBPANELAPPLET_REQUIRED_VERSION LIBXFCE4PANEL_VERSION LIBXFCE4PANEL_CFLAGS LIBXFCE4PANEL_LIBS LIBXFCE4PANEL_REQUIRED_VERSION LIBXFCE4PANEL_LOCALE_DIR LIBXFCE4UTIL_VERSION LIBXFCE4UTIL_CFLAGS LIBXFCE4UTIL_LIBS LIBXFCE4UTIL_REQUIRED_VERSION LIBXFCEGUI4_VERSION LIBXFCEGUI4_CFLAGS LIBXFCEGUI4_LIBS LIBXFCEGUI4_REQUIRED_VERSION REVISION LIBOBJS LTLIBOBJS'
+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP HAVE_CYGWIN_TRUE HAVE_CYGWIN_FALSE build build_cpu build_vendor build_os host host_cpu host_vendor host_os LN_S ECHO AR ac_ct_AR RANLIB ac_ct_RANLIB CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP F77 FFLAGS ac_ct_F77 LIBTOOL INTLTOOL_DESKTOP_RULE INTLTOOL_DIRECTORY_RULE INTLTOOL_KEYS_RULE INTLTOOL_PROP_RULE INTLTOOL_OAF_RULE INTLTOOL_PONG_RULE INTLTOOL_SERVER_RULE INTLTOOL_SHEET_RULE INTLTOOL_SOUNDLIST_RULE INTLTOOL_UI_RULE INTLTOOL_XAM_RULE INTLTOOL_KBD_RULE INTLTOOL_XML_RULE INTLTOOL_XML_NOMERGE_RULE INTLTOOL_CAVES_RULE INTLTOOL_SCHEMAS_RULE INTLTOOL_THEME_RULE INTLTOOL_SERVICE_RULE INTLTOOL_EXTRACT INTLTOOL_MERGE INTLTOOL_UPDATE INTLTOOL_PERL INTLTOOL_ICONV INTLTOOL_MSGFMT INTLTOOL_MSGMERGE INTLTOOL_XGETTEXT GETTEXT_PACKAGE USE_NLS MSGFMT GMSGFMT XGETTEXT CATALOGS CATOBJEXT DATADIRNAME GMOFILES INSTOBJEXT INTLLIBS PO_IN_DATADIR_TRUE PO_IN_DATADIR_FALSE POFILES POSUB MKINSTALLDIRS localedir XGETTEXT_ARGS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS LIBX11_CFLAGS LIBX11_LDFLAGS LIBX11_LIBS LIBSM_CFLAGS LIBSM_LDFLAGS LIBSM_LIBS PKG_CONFIG GOBJECT_VERSION GOBJECT_CFLAGS GOBJECT_LIBS GOBJECT_REQUIRED_VERSION GTK_VERSION GTK_CFLAGS GTK_LIBS GTK_REQUIRED_VERSION MATECORBA2_VERSION MATECORBA2_CFLAGS MATECORBA2_LIBS MATECORBA2_REQUIRED_VERSION LIBPANELAPPLET_VERSION LIBPANELAPPLET_CFLAGS LIBPANELAPPLET_LIBS LIBPANELAPPLET_REQUIRED_VERSION LIBXFCE4PANEL_VERSION LIBXFCE4PANEL_CFLAGS LIBXFCE4PANEL_LIBS LIBXFCE4PANEL_REQUIRED_VERSION LIBXFCE4PANEL_LOCALE_DIR LIBXFCE4UTIL_VERSION LIBXFCE4UTIL_CFLAGS LIBXFCE4UTIL_LIBS LIBXFCE4UTIL_REQUIRED_VERSION LIBXFCEGUI4_VERSION LIBXFCEGUI4_CFLAGS LIBXFCEGUI4_LIBS LIBXFCEGUI4_REQUIRED_VERSION REVISION LIBOBJS LTLIBOBJS'
 ac_subst_files=''
 
 # Initialize some variables set by options.
@@ -23800,26 +23800,26 @@
   fi
 
 
-  echo "$as_me:$LINENO: checking for ORBit-2.0 >= 2.12.5" >&5
-echo $ECHO_N "checking for ORBit-2.0 >= 2.12.5... $ECHO_C" >&6
-  if $PKG_CONFIG "--atleast-version=2.12.5" "ORBit-2.0" >/dev/null 2>&1; then
-    ORBIT2_VERSION=`$PKG_CONFIG --modversion "ORBit-2.0"`
-    echo "$as_me:$LINENO: result: $ORBIT2_VERSION" >&5
-echo "${ECHO_T}$ORBIT2_VERSION" >&6
+  echo "$as_me:$LINENO: checking for MateCORBA-2.0 >= 1.1" >&5
+echo $ECHO_N "checking for MateCORBA-2.0 >= 1.1... $ECHO_C" >&6
+  if $PKG_CONFIG "--atleast-version=1.1" "MateCORBA-2.0" >/dev/null 2>&1; then
+    MATECORBA2_VERSION=`$PKG_CONFIG --modversion "MateCORBA-2.0"`
+    echo "$as_me:$LINENO: result: $MATECORBA2_VERSION" >&5
+echo "${ECHO_T}$MATECORBA2_VERSION" >&6
 
-    echo "$as_me:$LINENO: checking ORBIT2_CFLAGS" >&5
-echo $ECHO_N "checking ORBIT2_CFLAGS... $ECHO_C" >&6
-    ORBIT2_CFLAGS=`$PKG_CONFIG --cflags "ORBit-2.0"`
-    echo "$as_me:$LINENO: result: $ORBIT2_CFLAGS" >&5
-echo "${ECHO_T}$ORBIT2_CFLAGS" >&6
+    echo "$as_me:$LINENO: checking MATECORBA2_CFLAGS" >&5
+echo $ECHO_N "checking MATECORBA2_CFLAGS... $ECHO_C" >&6
+    MATECORBA2_CFLAGS=`$PKG_CONFIG --cflags "MateCORBA-2.0"`
+    echo "$as_me:$LINENO: result: $MATECORBA2_CFLAGS" >&5
+echo "${ECHO_T}$MATECORBA2_CFLAGS" >&6
 
-    echo "$as_me:$LINENO: checking ORBIT2_LIBS" >&5
-echo $ECHO_N "checking ORBIT2_LIBS... $ECHO_C" >&6
-    ORBIT2_LIBS=`$PKG_CONFIG --libs "ORBit-2.0"`
-    echo "$as_me:$LINENO: result: $ORBIT2_LIBS" >&5
-echo "${ECHO_T}$ORBIT2_LIBS" >&6
+    echo "$as_me:$LINENO: checking MATECORBA2_LIBS" >&5
+echo $ECHO_N "checking MATECORBA2_LIBS... $ECHO_C" >&6
+    MATECORBA2_LIBS=`$PKG_CONFIG --libs "MateCORBA-2.0"`
+    echo "$as_me:$LINENO: result: $MATECORBA2_LIBS" >&5
+echo "${ECHO_T}$MATECORBA2_LIBS" >&6
 
-    ORBIT2_REQUIRED_VERSION=2.12.5
+    MATECORBA2_REQUIRED_VERSION=1.1
 
 
 
@@ -23827,15 +23827,15 @@
 
 
 
-  elif $PKG_CONFIG --exists "ORBit-2.0" >/dev/null 2>&1; then
-    xdt_cv_version=`$PKG_CONFIG --modversion "ORBit-2.0"`
+  elif $PKG_CONFIG --exists "MateCORBA-2.0" >/dev/null 2>&1; then
+    xdt_cv_version=`$PKG_CONFIG --modversion "MateCORBA-2.0"`
     echo "$as_me:$LINENO: result: found, but $xdt_cv_version" >&5
 echo "${ECHO_T}found, but $xdt_cv_version" >&6
 
 
-      echo "*** The required package ORBit-2.0 was found on your system,"
+      echo "*** The required package MateCORBA-2.0 was found on your system,"
       echo "*** but the installed version ($xdt_cv_version) is too old."
-      echo "*** Please upgrade ORBit-2.0 to atleast version 2.12.5, or adjust"
+      echo "*** Please upgrade MateCORBA-2.0 to atleast version 1.1, or adjust"
       echo "*** the PKG_CONFIG_PATH environment variable if you installed"
       echo "*** the new version of the package in a nonstandard prefix so"
       echo "*** pkg-config is able to find it."
@@ -23846,8 +23846,8 @@
 echo "${ECHO_T}not found" >&6
 
 
-      echo "*** The required package ORBit-2.0 was not found on your system."
-      echo "*** Please install ORBit-2.0 (atleast version 2.12.5) or adjust"
+      echo "*** The required package MateCORBA-2.0 was not found on your system."
+      echo "*** Please install MateCORBA-2.0 (atleast version 1.1) or adjust"
       echo "*** the PKG_CONFIG_PATH environment variable if you"
       echo "*** installed the package in a nonstandard prefix so that"
       echo "*** pkg-config is able to find it."
@@ -23937,26 +23937,26 @@
   fi
 
 
-  echo "$as_me:$LINENO: checking for libpanelapplet-2.0 >= 2.0.0" >&5
-echo $ECHO_N "checking for libpanelapplet-2.0 >= 2.0.0... $ECHO_C" >&6
-  if $PKG_CONFIG "--atleast-version=2.0.0" "libpanelapplet-2.0" >/dev/null 2>&1; then
-    LIBPANELAPPLET_VERSION=`$PKG_CONFIG --modversion "libpanelapplet-2.0"`
+  echo "$as_me:$LINENO: checking for libmatepanelapplet-2.0 >= 1.1" >&5
+echo $ECHO_N "checking for libmatepanelapplet-2.0 >= 1.1... $ECHO_C" >&6
+  if $PKG_CONFIG "--atleast-version=1.1" "libmatepanelapplet-2.0" >/dev/null 2>&1; then
+    LIBPANELAPPLET_VERSION=`$PKG_CONFIG --modversion "libmatepanelapplet-2.0"`
     echo "$as_me:$LINENO: result: $LIBPANELAPPLET_VERSION" >&5
 echo "${ECHO_T}$LIBPANELAPPLET_VERSION" >&6
 
     echo "$as_me:$LINENO: checking LIBPANELAPPLET_CFLAGS" >&5
 echo $ECHO_N "checking LIBPANELAPPLET_CFLAGS... $ECHO_C" >&6
-    LIBPANELAPPLET_CFLAGS=`$PKG_CONFIG --cflags "libpanelapplet-2.0"`
+    LIBPANELAPPLET_CFLAGS=`$PKG_CONFIG --cflags "libmatepanelapplet-2.0"`
     echo "$as_me:$LINENO: result: $LIBPANELAPPLET_CFLAGS" >&5
 echo "${ECHO_T}$LIBPANELAPPLET_CFLAGS" >&6
 
     echo "$as_me:$LINENO: checking LIBPANELAPPLET_LIBS" >&5
 echo $ECHO_N "checking LIBPANELAPPLET_LIBS... $ECHO_C" >&6
-    LIBPANELAPPLET_LIBS=`$PKG_CONFIG --libs "libpanelapplet-2.0"`
+    LIBPANELAPPLET_LIBS=`$PKG_CONFIG --libs "libmatepanelapplet-2.0"`
     echo "$as_me:$LINENO: result: $LIBPANELAPPLET_LIBS" >&5
 echo "${ECHO_T}$LIBPANELAPPLET_LIBS" >&6
 
-    LIBPANELAPPLET_REQUIRED_VERSION=2.0.0
+    LIBPANELAPPLET_REQUIRED_VERSION=1.1
 
 
 
@@ -23964,15 +23964,15 @@
 
 
 
-  elif $PKG_CONFIG --exists "libpanelapplet-2.0" >/dev/null 2>&1; then
-    xdt_cv_version=`$PKG_CONFIG --modversion "libpanelapplet-2.0"`
+  elif $PKG_CONFIG --exists "libmatepanelapplet-2.0" >/dev/null 2>&1; then
+    xdt_cv_version=`$PKG_CONFIG --modversion "libmatepanelapplet-2.0"`
     echo "$as_me:$LINENO: result: found, but $xdt_cv_version" >&5
 echo "${ECHO_T}found, but $xdt_cv_version" >&6
 
 
-      echo "*** The required package libpanelapplet-2.0 was found on your system,"
+      echo "*** The required package libmatepanelapplet-2.0 was found on your system,"
       echo "*** but the installed version ($xdt_cv_version) is too old."
-      echo "*** Please upgrade libpanelapplet-2.0 to atleast version 2.0.0, or adjust"
+      echo "*** Please upgrade libmatepanelapplet-2.0 to atleast version 1.1, or adjust"
       echo "*** the PKG_CONFIG_PATH environment variable if you installed"
       echo "*** the new version of the package in a nonstandard prefix so"
       echo "*** pkg-config is able to find it."
@@ -23983,8 +23983,8 @@
 echo "${ECHO_T}not found" >&6
 
 
-      echo "*** The required package libpanelapplet-2.0 was not found on your system."
-      echo "*** Please install libpanelapplet-2.0 (atleast version 2.0.0) or adjust"
+      echo "*** The required package libmatepanelapplet-2.0 was not found on your system."
+      echo "*** Please install libmatepanelapplet-2.0 (atleast version 1.1) or adjust"
       echo "*** the PKG_CONFIG_PATH environment variable if you"
       echo "*** installed the package in a nonstandard prefix so that"
       echo "*** pkg-config is able to find it."
@@ -25286,10 +25286,10 @@
 s,@GTK_CFLAGS@,$GTK_CFLAGS,;t t
 s,@GTK_LIBS@,$GTK_LIBS,;t t
 s,@GTK_REQUIRED_VERSION@,$GTK_REQUIRED_VERSION,;t t
-s,@ORBIT2_VERSION@,$ORBIT2_VERSION,;t t
-s,@ORBIT2_CFLAGS@,$ORBIT2_CFLAGS,;t t
-s,@ORBIT2_LIBS@,$ORBIT2_LIBS,;t t
-s,@ORBIT2_REQUIRED_VERSION@,$ORBIT2_REQUIRED_VERSION,;t t
+s,@MATECORBA2_VERSION@,$MATECORBA2_VERSION,;t t
+s,@MATECORBA2_CFLAGS@,$MATECORBA2_CFLAGS,;t t
+s,@MATECORBA2_LIBS@,$MATECORBA2_LIBS,;t t
+s,@MATECORBA2_REQUIRED_VERSION@,$MATECORBA2_REQUIRED_VERSION,;t t
 s,@LIBPANELAPPLET_VERSION@,$LIBPANELAPPLET_VERSION,;t t
 s,@LIBPANELAPPLET_CFLAGS@,$LIBPANELAPPLET_CFLAGS,;t t
 s,@LIBPANELAPPLET_LIBS@,$LIBPANELAPPLET_LIBS,;t t
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/configure.ac xfce4-xfapplet-plugin-0.1.0/configure.ac
--- xfce4-xfapplet-plugin-0.1.0.orig/configure.ac	2012-04-15 22:22:20.138523168 -0400
+++ xfce4-xfapplet-plugin-0.1.0/configure.ac	2012-04-15 22:24:16.608521123 -0400
@@ -1,6 +1,6 @@
 dnl configure.ac
 dnl xfce4-xfapplet-plugin: a plugin for the Xfce 4 panel capable of displaying
-dnl			   Gnome applets.
+dnl			   Mate applets.
 
 dnl version info
 m4_define([xfapplet_version], [0.1.0])
@@ -40,8 +40,8 @@
 dnl required
 XDT_CHECK_PACKAGE([GOBJECT], [gobject-2.0], [2.4.0])
 XDT_CHECK_PACKAGE([GTK], [gtk+-2.0], [2.4.0])
-XDT_CHECK_PACKAGE([ORBIT2], [ORBit-2.0], [2.12.5])
-XDT_CHECK_PACKAGE([LIBPANELAPPLET], [libpanelapplet-2.0], [2.0.0])
+XDT_CHECK_PACKAGE([MATECORBA2], [MateCORBA-2.0], [2.12.5])
+XDT_CHECK_PACKAGE([LIBPANELAPPLET], [libmatepanelapplet-2.0], [2.0.0])
 XDT_CHECK_PACKAGE([LIBXFCE4PANEL], [libxfce4panel-1.0], [4.3.20])
 
 dnl check special variable localedir for libxfce4panel
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/intltool-extract.in xfce4-xfapplet-plugin-0.1.0/intltool-extract.in
--- xfce4-xfapplet-plugin-0.1.0.orig/intltool-extract.in	2012-04-15 22:22:20.135189834 -0400
+++ xfce4-xfapplet-plugin-0.1.0/intltool-extract.in	2012-04-15 22:24:00.308521410 -0400
@@ -166,8 +166,8 @@
   -h, --help        Display this help and exit
   -q, --quiet       Quiet mode
 
-Report bugs to http://bugzilla.gnome.org/ (product name "$PACKAGE")
-or send email to <xml-i18n-tools\@gnome.org>.
+Report bugs to http://bugzilla.mate.org/ (product name "$PACKAGE")
+or send email to <xml-i18n-tools\@mate.org>.
 _EOF_
     exit;
 }
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/intltool-merge.in xfce4-xfapplet-plugin-0.1.0/intltool-merge.in
--- xfce4-xfapplet-plugin-0.1.0.orig/intltool-merge.in	2012-04-15 22:22:20.141856501 -0400
+++ xfce4-xfapplet-plugin-0.1.0/intltool-merge.in	2012-04-15 22:24:01.025188064 -0400
@@ -188,7 +188,7 @@
 untranslated source file.
 
 Mandatory options: (exactly one must be specified)
-  -b, --ba-style         includes translations in the bonobo-activation style
+  -b, --ba-style         includes translations in the matecomponent-activation style
   -d, --desktop-style    includes translations in the desktop style
   -k, --keys-style       includes translations in the keys style
   -s, --schemas-style    includes translations in the schemas style
@@ -207,8 +207,8 @@
       --help             display this help and exit
       --version          output version information and exit
 
-Report bugs to http://bugzilla.gnome.org/ (product name "$PACKAGE")
-or send email to <xml-i18n-tools\@gnome.org>.
+Report bugs to http://bugzilla.mate.org/ (product name "$PACKAGE")
+or send email to <xml-i18n-tools\@mate.org>.
 _EOF_
     exit;
 }
@@ -529,7 +529,7 @@
     return entity_encode ($translation);
 }
 
-## XML (bonobo-activation specific) merge code
+## XML (matecomponent-activation specific) merge code
 
 sub ba_merge_translations
 {
@@ -583,7 +583,7 @@
 }
 
 
-## XML (non-bonobo-activation) merge code
+## XML (non-matecomponent-activation) merge code
 
 
 # Process tag attributes
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/intltool-update.in xfce4-xfapplet-plugin-0.1.0/intltool-update.in
--- xfce4-xfapplet-plugin-0.1.0.orig/intltool-update.in	2012-04-15 22:22:20.141856501 -0400
+++ xfce4-xfapplet-plugin-0.1.0/intltool-update.in	2012-04-15 22:24:01.641854720 -0400
@@ -61,25 +61,25 @@
 
 my $xml_support =
 "xml(?:\\.in)*|".	# http://www.w3.org/XML/ (Note: .in is not required)
-"ui|".			# Bonobo specific - User Interface desc. files
+"ui|".			# MateComponent specific - User Interface desc. files
 "lang|".		# ?
 "glade2?(?:\\.in)*|".	# Glade specific - User Interface desc. files (Note: .in is not required)
 "scm(?:\\.in)*|".	# ? (Note: .in is not required)
-"oaf(?:\\.in)+|".	# DEPRECATED: Replaces by Bonobo .server files 
+"oaf(?:\\.in)+|".	# DEPRECATED: Replaces by MateComponent .server files 
 "etspec|".		# ?
-"server(?:\\.in)+|".	# Bonobo specific
+"server(?:\\.in)+|".	# MateComponent specific
 "sheet(?:\\.in)+|".	# ?
-"schemas(?:\\.in)+|".	# GConf specific
-"pong(?:\\.in)+|".	# DEPRECATED: PONG is not used [by GNOME] any longer.
+"schemas(?:\\.in)+|".	# MateConf specific
+"pong(?:\\.in)+|".	# DEPRECATED: PONG is not used [by MATE] any longer.
 "kbd(?:\\.in)+";	# GOK specific. 
 
 my $ini_support =
 "icon(?:\\.in)+|".	# http://www.freedesktop.org/Standards/icon-theme-spec
 "desktop(?:\\.in)+|".	# http://www.freedesktop.org/Standards/menu-spec
-"caves(?:\\.in)+|".	# GNOME Games specific
+"caves(?:\\.in)+|".	# MATE Games specific
 "directory(?:\\.in)+|".	# http://www.freedesktop.org/Standards/menu-spec
-"soundlist(?:\\.in)+|".	# GNOME specific
-"keys(?:\\.in)+|".	# GNOME Mime database specific
+"soundlist(?:\\.in)+|".	# MATE specific
+"keys(?:\\.in)+|".	# MATE Mime database specific
 "theme(?:\\.in)+|".	# http://www.freedesktop.org/Standards/icon-theme-spec
 "service(?:\\.in)+";    # DBus specific
 
@@ -210,8 +210,8 @@
 ${PROGRAM} --pot    just create a new PO template
 ${PROGRAM} xy       create new PO template and merge xy.po with it
 
-Report bugs to http://bugzilla.gnome.org/ (product name "$PACKAGE")
-or send email to <xml-i18n-tools\@gnome.org>.
+Report bugs to http://bugzilla.mate.org/ (product name "$PACKAGE")
+or send email to <xml-i18n-tools\@mate.org>.
 _EOF_
     exit;
 }
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/Makefile.in xfce4-xfapplet-plugin-0.1.0/Makefile.in
--- xfce4-xfapplet-plugin-0.1.0.orig/Makefile.in	2012-04-15 22:22:20.141856501 -0400
+++ xfce4-xfapplet-plugin-0.1.0/Makefile.in	2012-04-15 22:24:16.098521133 -0400
@@ -185,10 +185,10 @@
 MKINSTALLDIRS = @MKINSTALLDIRS@
 MSGFMT = @MSGFMT@
 OBJEXT = @OBJEXT@
-ORBIT2_CFLAGS = @ORBIT2_CFLAGS@
-ORBIT2_LIBS = @ORBIT2_LIBS@
-ORBIT2_REQUIRED_VERSION = @ORBIT2_REQUIRED_VERSION@
-ORBIT2_VERSION = @ORBIT2_VERSION@
+MATECORBA2_CFLAGS = @MATECORBA2_CFLAGS@
+MATECORBA2_LIBS = @MATECORBA2_LIBS@
+MATECORBA2_REQUIRED_VERSION = @MATECORBA2_REQUIRED_VERSION@
+MATECORBA2_VERSION = @MATECORBA2_VERSION@
 PACKAGE = @PACKAGE@
 PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 PACKAGE_NAME = @PACKAGE_NAME@
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/NEWS xfce4-xfapplet-plugin-0.1.0/NEWS
--- xfce4-xfapplet-plugin-0.1.0.orig/NEWS	2012-04-15 22:22:20.141856501 -0400
+++ xfce4-xfapplet-plugin-0.1.0/NEWS	2012-04-15 22:24:13.121854519 -0400
@@ -2,6 +2,6 @@
 
 Version 0.1.0 (30 Apr 2006)
 	This is the first stable release of XfApplet. It supports loading and
-	displaying Gnome applets (almost) exactly as the Gnome panel. Hope you
+	displaying Mate applets (almost) exactly as the Mate panel. Hope you
 	like it.
 
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/chooser.c xfce4-xfapplet-plugin-0.1.0/panel-plugin/chooser.c
--- xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/chooser.c	2012-04-15 22:22:20.138523168 -0400
+++ xfce4-xfapplet-plugin-0.1.0/panel-plugin/chooser.c	2012-04-15 22:24:18.511854424 -0400
@@ -1,5 +1,5 @@
 /*
- *  xfce4-xfapplet-plugin - a gnome applet displaying plugin for xfce4 panel
+ *  xfce4-xfapplet-plugin - a mate applet displaying plugin for xfce4 panel
  *  Copyright (c) 2006 Adriano Winter Bess <awbess@gmail.com>
  *
  *  This program is free software; you can redistribute it and/or modify
@@ -22,15 +22,15 @@
 
 #include <string.h>
 #include <gtk/gtk.h>
-#include <gconf/gconf-client.h>
-#include <bonobo/bonobo-exception.h>
-#include <bonobo-activation/bonobo-activation.h>
+#include <mateconf/mateconf-client.h>
+#include <matecomponent/matecomponent-exception.h>
+#include <matecomponent-activation/matecomponent-activation.h>
 #include <libxfcegui4/libxfcegui4.h>
 #include "xfapplet.h"
 
 static const char applets_requirements [] =
-"has_all (repo_ids, ['IDL:Bonobo/Control:1.0',"
-"		     'IDL:GNOME/Vertigo/PanelAppletShell:1.0']) && "
+"has_all (repo_ids, ['IDL:MateComponent/Control:1.0',"
+"		     'IDL:MATE/Vertigo/MatePanelAppletShell:1.0']) && "
 "defined (panel:icon)";
 
 static char *applets_sort_criteria [] = {
@@ -43,7 +43,7 @@
 	gchar     *description;
 	GdkPixbuf *icon;
 	gchar     *iid;	
-} GnomeAppletInfo;
+} MateAppletInfo;
 
 typedef struct {
 	GtkWidget	*tv;
@@ -57,25 +57,25 @@
 static gchar *
 xfapplet_find_unique_key (gchar *applet_name)
 {
-	GConfClient	*client;
+	MateConfClient	*client;
 	gchar		*key = NULL;
 	gchar		*in_use;
 	gchar		*name;
 	int		 i = 0;
 
-	client = gconf_client_get_default ();
+	client = mateconf_client_get_default ();
 
 	do {
 		g_free (key);
-		key = g_strdup_printf (XFAPPLET_GCONF_DIR "applet_%d", i++);
-	} while (gconf_client_dir_exists (client, key, NULL));
+		key = g_strdup_printf (XFAPPLET_MATECONF_DIR "applet_%d", i++);
+	} while (mateconf_client_dir_exists (client, key, NULL));
 
 	in_use = g_strdup_printf ("%s/in_use", key);
-	gconf_client_set_bool (client, in_use, TRUE, NULL);
+	mateconf_client_set_bool (client, in_use, TRUE, NULL);
 	g_free (in_use);
 
 	name = g_strdup_printf ("%s/name", key);
-	gconf_client_set_string (client, name, applet_name, NULL);
+	mateconf_client_set_string (client, name, applet_name, NULL);
 	g_free (name);
 
 	g_object_unref (client);
@@ -84,7 +84,7 @@
 }
 
 /*
- * This one was borrowed (almost) entirely from the Gnome panel. Since
+ * This one was borrowed (almost) entirely from the Mate panel. Since
  * each applet specifies its icon in a different way, we have to fix
  * things up.
  */
@@ -205,22 +205,22 @@
 	}
 }
 
-static GnomeAppletInfo*
-xfapplet_read_applet_info (Bonobo_ServerInfo *info, GSList *langs)
+static MateAppletInfo*
+xfapplet_read_applet_info (MateComponent_ServerInfo *info, GSList *langs)
 {
 	const char         *name, *description, *icon;
-	GnomeAppletInfo    *applet;
+	MateAppletInfo    *applet;
 	GdkPixbuf          *pb;
 	int                 desired_width, desired_height;
 
-	name = bonobo_server_info_prop_lookup (info, "name", langs);
-	description = bonobo_server_info_prop_lookup (info, "description", langs);
-	icon = bonobo_server_info_prop_lookup (info, "panel:icon", NULL);
+	name = matecomponent_server_info_prop_lookup (info, "name", langs);
+	description = matecomponent_server_info_prop_lookup (info, "description", langs);
+	icon = matecomponent_server_info_prop_lookup (info, "panel:icon", NULL);
 
 	if (!name)
 		return NULL;
 
-	applet = g_new0 (GnomeAppletInfo, 1);
+	applet = g_new0 (MateAppletInfo, 1);
 	applet->name = g_strdup (name);
 	applet->description = g_strdup (description);
 	applet->iid = g_strdup (info->iid);
@@ -248,16 +248,16 @@
 static GSList*
 xfapplet_query_applets ()
 {
-	Bonobo_ServerInfoList *applet_list;
+	MateComponent_ServerInfoList *applet_list;
 	CORBA_Environment      env;
 	const char * const    *langs;
 	GSList                *langs_gslist, *list = NULL;
 	int                    i;
 
 	CORBA_exception_init (&env);
-	applet_list = bonobo_activation_query (applets_requirements, applets_sort_criteria, &env);
-	if (BONOBO_EX (&env)) {
-		g_warning ("Failed to query applets: %s\n", BONOBO_EX_REPOID (&env));
+	applet_list = matecomponent_activation_query (applets_requirements, applets_sort_criteria, &env);
+	if (MATECOMPONENT_EX (&env)) {
+		g_warning ("Failed to query applets: %s\n", MATECOMPONENT_EX_REPOID (&env));
 		CORBA_exception_free (&env);
 		CORBA_free (applet_list);
 		return NULL;
@@ -271,7 +271,7 @@
 	langs_gslist = g_slist_reverse (langs_gslist);
 
 	for (i = 0; i < applet_list->_length; i++) {
-		GnomeAppletInfo *applet = xfapplet_read_applet_info (&applet_list->_buffer[i], langs_gslist);
+		MateAppletInfo *applet = xfapplet_read_applet_info (&applet_list->_buffer[i], langs_gslist);
 		if (applet)
 			list = g_slist_prepend (list, applet);
 	}
@@ -286,7 +286,7 @@
 xfapplet_render_icon (GtkTreeViewColumn *col, GtkCellRenderer *cell,
 		      GtkTreeModel *model, GtkTreeIter *iter, gpointer data)
 {
-	GnomeAppletInfo *applet;
+	MateAppletInfo *applet;
 
 	gtk_tree_model_get (model, iter, 0, &applet, -1);
 
@@ -300,7 +300,7 @@
 xfapplet_render_text (GtkTreeViewColumn *col, GtkCellRenderer *cell,
 		      GtkTreeModel *model, GtkTreeIter *iter, GtkWidget *treeview)
 {
-	GnomeAppletInfo *applet;
+	MateAppletInfo *applet;
 	gchar           *text;
 
 	gtk_tree_model_get (model, iter, 0, &applet, -1);
@@ -318,7 +318,7 @@
 }
 
 void
-xfapplet_free_applet_info (GnomeAppletInfo *applet)
+xfapplet_free_applet_info (MateAppletInfo *applet)
 {
 	if (applet) {
 		g_free (applet->name);
@@ -337,7 +337,7 @@
 
 	for (list = lst; list; list = list->next) {
 		if (list->data) 
-			xfapplet_free_applet_info ((GnomeAppletInfo*) list->data);
+			xfapplet_free_applet_info ((MateAppletInfo*) list->data);
 	}
 
 	g_slist_free (lst);
@@ -349,7 +349,7 @@
 	GtkTreeSelection	*sel;
 	GtkTreeModel		*model;
 	GtkTreeIter		 iter;
-	GnomeAppletInfo		*applet;
+	MateAppletInfo		*applet;
 	XfAppletPlugin		*xap = chooser->xap;
 
 	if (response == GTK_RESPONSE_OK) {
@@ -359,7 +359,7 @@
 			xfapplet_cleanup_current (xap);
 			xap->iid = g_strdup (applet->iid);
 			xap->name = g_strdup (applet->name);
-			xap->gconf_key = xfapplet_find_unique_key (applet->name);
+			xap->mateconf_key = xfapplet_find_unique_key (applet->name);
 			xfapplet_setup_full (xap);
 		}
 	}
@@ -382,7 +382,7 @@
 }
 
 static int
-xfapplet_applet_compare (GnomeAppletInfo *a, GnomeAppletInfo *b)
+xfapplet_applet_compare (MateAppletInfo *a, MateAppletInfo *b)
 {
 	return g_utf8_collate (a->name, b->name);
 }
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/Makefile.in xfce4-xfapplet-plugin-0.1.0/panel-plugin/Makefile.in
--- xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/Makefile.in	2012-04-15 22:22:20.138523168 -0400
+++ xfce4-xfapplet-plugin-0.1.0/panel-plugin/Makefile.in	2012-04-15 22:24:19.551854406 -0400
@@ -195,10 +195,10 @@
 MKINSTALLDIRS = @MKINSTALLDIRS@
 MSGFMT = @MSGFMT@
 OBJEXT = @OBJEXT@
-ORBIT2_CFLAGS = @ORBIT2_CFLAGS@
-ORBIT2_LIBS = @ORBIT2_LIBS@
-ORBIT2_REQUIRED_VERSION = @ORBIT2_REQUIRED_VERSION@
-ORBIT2_VERSION = @ORBIT2_VERSION@
+MATECORBA2_CFLAGS = @MATECORBA2_CFLAGS@
+MATECORBA2_LIBS = @MATECORBA2_LIBS@
+MATECORBA2_REQUIRED_VERSION = @MATECORBA2_REQUIRED_VERSION@
+MATECORBA2_VERSION = @MATECORBA2_VERSION@
 PACKAGE = @PACKAGE@
 PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
 PACKAGE_NAME = @PACKAGE_NAME@
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/xfapplet.c xfce4-xfapplet-plugin-0.1.0/panel-plugin/xfapplet.c
--- xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/xfapplet.c	2012-04-15 22:22:20.138523168 -0400
+++ xfce4-xfapplet-plugin-0.1.0/panel-plugin/xfapplet.c	2012-04-15 22:24:20.668521053 -0400
@@ -1,5 +1,5 @@
 /*
- *  xfce4-xfapplet-plugin - a gnome applet displaying plugin for xfce4 panel
+ *  xfce4-xfapplet-plugin - a mate applet displaying plugin for xfce4 panel
  *  Copyright (c) 2006 Adriano Winter Bess <awbess@gmail.com>
  *
  *  This program is free software; you can redistribute it and/or modify
@@ -21,14 +21,14 @@
 #endif
 
 #include <gtk/gtk.h>
-#include <bonobo/bonobo-moniker-util.h>
-#include <bonobo/bonobo-widget.h>
-#include <bonobo/bonobo-ui-component.h>
-#include <bonobo/bonobo-control-frame.h>
-#include <bonobo/bonobo-ui-util.h>
-#include <bonobo/bonobo-exception.h>
-#include <bonobo/bonobo-ui-main.h>
-#include <gconf/gconf-client.h>
+#include <matecomponent/matecomponent-moniker-util.h>
+#include <matecomponent/matecomponent-widget.h>
+#include <matecomponent/matecomponent-ui-component.h>
+#include <matecomponent/matecomponent-control-frame.h>
+#include <matecomponent/matecomponent-ui-util.h>
+#include <matecomponent/matecomponent-exception.h>
+#include <matecomponent/matecomponent-ui-main.h>
+#include <mateconf/mateconf-client.h>
 #include <libxfce4util/libxfce4util.h>
 #include <libxfce4panel/xfce-panel-plugin.h>
 #include <libxfcegui4/libxfcegui4.h>
@@ -42,20 +42,20 @@
 #define ADD_MENU_ITEM_ORDER             8
 #define CUSTOMIZE_MENU_ITEM_ORDER       9
 
-/* Gnome panel sizes. */
-#define GNOME_PANEL_SIZE_XX_SMALL       12
-#define GNOME_PANEL_SIZE_X_SMALL        24
-#define GNOME_PANEL_SIZE_SMALL          36
-#define GNOME_PANEL_SIZE_MEDIUM         48
-#define GNOME_PANEL_SIZE_LARGE          64
-#define GNOME_PANEL_SIZE_X_LARGE        80
-#define GNOME_PANEL_SIZE_XX_LARGE       128
-
-/* Gnome applet orientations */
-#define GNOME_APPLET_ORIENT_UP		0
-#define GNOME_APPLET_ORIENT_DOWN	1
-#define GNOME_APPLET_ORIENT_LEFT	2
-#define GNOME_APPLET_ORIENT_RIGHT	3
+/* Mate panel sizes. */
+#define MATE_PANEL_SIZE_XX_SMALL       12
+#define MATE_PANEL_SIZE_X_SMALL        24
+#define MATE_PANEL_SIZE_SMALL          36
+#define MATE_PANEL_SIZE_MEDIUM         48
+#define MATE_PANEL_SIZE_LARGE          64
+#define MATE_PANEL_SIZE_X_LARGE        80
+#define MATE_PANEL_SIZE_XX_LARGE       128
+
+/* Mate applet orientations */
+#define MATE_APPLET_ORIENT_UP		0
+#define MATE_APPLET_ORIENT_DOWN	1
+#define MATE_APPLET_ORIENT_LEFT	2
+#define MATE_APPLET_ORIENT_RIGHT	3
 
 enum {
 	PANEL_NEAR_TOP,
@@ -68,21 +68,21 @@
 xfapplet_setup_empty (XfAppletPlugin *xap);
 
 static void
-xfapplet_cleanup_unused_gconf_keys ()
+xfapplet_cleanup_unused_mateconf_keys ()
 {
-	GConfClient *client;
+	MateConfClient *client;
 	gchar	*dir;
 	gchar	*in_use_key;
 	int	 i = 0;
 
-	client = gconf_client_get_default ();
+	client = mateconf_client_get_default ();
 	
 	while (1) {
-		dir = g_strdup_printf (XFAPPLET_GCONF_DIR "applet_%d", i++);
-		if (gconf_client_dir_exists (client, dir, NULL)) {
+		dir = g_strdup_printf (XFAPPLET_MATECONF_DIR "applet_%d", i++);
+		if (mateconf_client_dir_exists (client, dir, NULL)) {
 			in_use_key = g_strdup_printf ("%s/in_use", dir);
-			if (!gconf_client_get_bool (client, in_use_key, NULL))
-				gconf_client_recursive_unset (client, dir, GCONF_UNSET_INCLUDING_SCHEMA_NAMES, NULL);
+			if (!mateconf_client_get_bool (client, in_use_key, NULL))
+				mateconf_client_recursive_unset (client, dir, MATECONF_UNSET_INCLUDING_SCHEMA_NAMES, NULL);
 			g_free (in_use_key);
 			g_free (dir);
 		}
@@ -115,8 +115,8 @@
 	xap->iid = NULL;
 	g_free (xap->name);
 	xap->name = NULL;
-	g_free (xap->gconf_key);
-	xap->gconf_key = NULL;
+	g_free (xap->mateconf_key);
+	xap->mateconf_key = NULL;
 }
 
 static void
@@ -135,7 +135,7 @@
 }
 
 static void
-xfapplet_connection_broken (ORBitConnection *conn, XfAppletPlugin *xap)
+xfapplet_connection_broken (MateCORBAConnection *conn, XfAppletPlugin *xap)
 {
 	GtkWidget	*dialog;
 	GdkScreen	*screen;
@@ -162,17 +162,17 @@
 xfapplet_unload_applet (XfAppletPlugin *xap)
 {
 	if (xap->prop_bag) {
-		bonobo_object_release_unref (xap->prop_bag, NULL);
+		matecomponent_object_release_unref (xap->prop_bag, NULL);
 		xap->prop_bag = CORBA_OBJECT_NIL;
 	}
 
 	if (xap->uic) {
-		bonobo_object_unref (BONOBO_OBJECT (xap->uic));
+		matecomponent_object_unref (MATECOMPONENT_OBJECT (xap->uic));
 		xap->uic = NULL;
 	}
 	
 	if (xap->object) {
-		ORBit_small_unlisten_for_broken (xap->object, G_CALLBACK (xfapplet_connection_broken));
+		MateCORBA_small_unlisten_for_broken (xap->object, G_CALLBACK (xfapplet_connection_broken));
 		CORBA_Object_release (xap->object, NULL);
 		xap->object = CORBA_OBJECT_NIL;
 	}
@@ -198,31 +198,31 @@
 }
 
 static unsigned short
-xfapplet_xfce_screen_position_to_gnome_applet_orientation (XfcePanelPlugin *plugin, XfceScreenPosition position)
+xfapplet_xfce_screen_position_to_mate_applet_orientation (XfcePanelPlugin *plugin, XfceScreenPosition position)
 {
         switch (position) {
         case XFCE_SCREEN_POSITION_NW_H:   /* top */
 	case XFCE_SCREEN_POSITION_N:
 	case XFCE_SCREEN_POSITION_NE_H:
-                return GNOME_APPLET_ORIENT_DOWN;
+                return MATE_APPLET_ORIENT_DOWN;
         case XFCE_SCREEN_POSITION_SW_H:   /* bottom */
 	case XFCE_SCREEN_POSITION_S:
 	case XFCE_SCREEN_POSITION_SE_H:
-                return GNOME_APPLET_ORIENT_UP;
+                return MATE_APPLET_ORIENT_UP;
         case XFCE_SCREEN_POSITION_NW_V:   /* left */
 	case XFCE_SCREEN_POSITION_W:
 	case XFCE_SCREEN_POSITION_SW_V:
-                return GNOME_APPLET_ORIENT_RIGHT;
+                return MATE_APPLET_ORIENT_RIGHT;
         case XFCE_SCREEN_POSITION_NE_V:   /* right */
 	case XFCE_SCREEN_POSITION_E:
 	case XFCE_SCREEN_POSITION_SE_V:
-                return GNOME_APPLET_ORIENT_LEFT;
+                return MATE_APPLET_ORIENT_LEFT;
 	case XFCE_SCREEN_POSITION_FLOATING_H:
 		switch (xfapplet_panel_near (GTK_WIDGET (plugin), GTK_ORIENTATION_HORIZONTAL)) {
 		case PANEL_NEAR_TOP:
-			return GNOME_APPLET_ORIENT_DOWN;
+			return MATE_APPLET_ORIENT_DOWN;
 		case PANEL_NEAR_BOTTOM:
-			return GNOME_APPLET_ORIENT_UP;
+			return MATE_APPLET_ORIENT_UP;
 		default:
 			g_assert_not_reached ();
 			break;
@@ -231,9 +231,9 @@
 	case XFCE_SCREEN_POSITION_FLOATING_V:
 		switch (xfapplet_panel_near (GTK_WIDGET (plugin), GTK_ORIENTATION_VERTICAL)) {
 		case PANEL_NEAR_RIGHT:
-			return GNOME_APPLET_ORIENT_LEFT;
+			return MATE_APPLET_ORIENT_LEFT;
 		case PANEL_NEAR_LEFT:
-			return GNOME_APPLET_ORIENT_RIGHT;
+			return MATE_APPLET_ORIENT_RIGHT;
 		default:
 			g_assert_not_reached ();
 			break;
@@ -246,20 +246,20 @@
                 break;
         }
 
-	return GNOME_APPLET_ORIENT_UP;
+	return MATE_APPLET_ORIENT_UP;
 }
 
 static unsigned short
-xfapplet_xfce_size_to_gnome_size (gint size)
+xfapplet_xfce_size_to_mate_size (gint size)
 {
 	unsigned short sz;
 	
-	sz = size <= GNOME_PANEL_SIZE_XX_SMALL ? GNOME_PANEL_SIZE_XX_SMALL :
-	     size <= GNOME_PANEL_SIZE_X_SMALL  ? GNOME_PANEL_SIZE_X_SMALL  :
-	     size <= GNOME_PANEL_SIZE_SMALL    ? GNOME_PANEL_SIZE_SMALL    :
-	     size <= GNOME_PANEL_SIZE_MEDIUM   ? GNOME_PANEL_SIZE_MEDIUM   :
-	     size <= GNOME_PANEL_SIZE_LARGE    ? GNOME_PANEL_SIZE_LARGE    :
-	     size <= GNOME_PANEL_SIZE_X_LARGE  ? GNOME_PANEL_SIZE_X_LARGE  : GNOME_PANEL_SIZE_XX_LARGE;
+	sz = size <= MATE_PANEL_SIZE_XX_SMALL ? MATE_PANEL_SIZE_XX_SMALL :
+	     size <= MATE_PANEL_SIZE_X_SMALL  ? MATE_PANEL_SIZE_X_SMALL  :
+	     size <= MATE_PANEL_SIZE_SMALL    ? MATE_PANEL_SIZE_SMALL    :
+	     size <= MATE_PANEL_SIZE_MEDIUM   ? MATE_PANEL_SIZE_MEDIUM   :
+	     size <= MATE_PANEL_SIZE_LARGE    ? MATE_PANEL_SIZE_LARGE    :
+	     size <= MATE_PANEL_SIZE_X_LARGE  ? MATE_PANEL_SIZE_X_LARGE  : MATE_PANEL_SIZE_XX_LARGE;
 
 	return sz;
 }
@@ -276,7 +276,7 @@
 
 	/*
 	 * Workaround: Xfce panel makes all items in all panels insensitive when
-	 * moving items between panels. Some Gnome applets (noticeably the Mixer
+	 * moving items between panels. Some Mate applets (noticeably the Mixer
 	 * applet) misbehave when the following happens:
 	 * 1. Applet is set insensitive;
 	 * 2. Applet changes orientation;
@@ -289,8 +289,8 @@
 	if (child)
 		gtk_widget_set_sensitive (child, TRUE);
 
-	orientation = xfapplet_xfce_screen_position_to_gnome_applet_orientation (plugin, position);
-	bonobo_pbclient_set_short (xap->prop_bag, "panel-applet-orient", orientation, NULL);
+	orientation = xfapplet_xfce_screen_position_to_mate_applet_orientation (plugin, position);
+	matecomponent_pbclient_set_short (xap->prop_bag, "mate-panel-applet-orient", orientation, NULL);
 
 	gtk_widget_queue_resize (GTK_WIDGET (plugin));
 }
@@ -301,8 +301,8 @@
 	XfAppletPlugin	*xap = (XfAppletPlugin*) data;
 	
 	if (xap->configured) {
-		gint sz = xfapplet_xfce_size_to_gnome_size (size);
-		bonobo_pbclient_set_short (xap->prop_bag, "panel-applet-size", sz, NULL);
+		gint sz = xfapplet_xfce_size_to_mate_size (size);
+		matecomponent_pbclient_set_short (xap->prop_bag, "mate-panel-applet-size", sz, NULL);
 	}
 
 	if (xfce_panel_plugin_get_orientation (plugin) == GTK_ORIENTATION_HORIZONTAL)
@@ -321,17 +321,17 @@
 
 	position = xfce_panel_plugin_get_screen_position (plugin);
 
-	switch (xfapplet_xfce_screen_position_to_gnome_applet_orientation (plugin, position)) {
-	case GNOME_APPLET_ORIENT_UP:
+	switch (xfapplet_xfce_screen_position_to_mate_applet_orientation (plugin, position)) {
+	case MATE_APPLET_ORIENT_UP:
 		ret = "up";
 		break;
-	case GNOME_APPLET_ORIENT_DOWN:
+	case MATE_APPLET_ORIENT_DOWN:
 		ret = "down";
 		break;
-	case GNOME_APPLET_ORIENT_RIGHT:
+	case MATE_APPLET_ORIENT_RIGHT:
 		ret = "right";
 		break;
-	case GNOME_APPLET_ORIENT_LEFT:
+	case MATE_APPLET_ORIENT_LEFT:
 		ret = "left";
 		break;
 	default:
@@ -348,25 +348,25 @@
 	const gchar	*retval;
 
 	size = xfce_panel_plugin_get_size (plugin);
-	size = xfapplet_xfce_size_to_gnome_size (size);
+	size = xfapplet_xfce_size_to_mate_size (size);
 
         switch (size) {
-	case GNOME_PANEL_SIZE_XX_SMALL:
+	case MATE_PANEL_SIZE_XX_SMALL:
                 retval = "xx-small";
 		break;
-	case GNOME_PANEL_SIZE_X_SMALL:
+	case MATE_PANEL_SIZE_X_SMALL:
 		retval = "x-small";
 		break;
-	case GNOME_PANEL_SIZE_SMALL:
+	case MATE_PANEL_SIZE_SMALL:
                 retval = "small";
 		break;
-	case GNOME_PANEL_SIZE_MEDIUM:
+	case MATE_PANEL_SIZE_MEDIUM:
                 retval = "medium";
 		break;
-	case GNOME_PANEL_SIZE_LARGE:
+	case MATE_PANEL_SIZE_LARGE:
                 retval = "large";
 		break;
-	case GNOME_PANEL_SIZE_X_LARGE:
+	case MATE_PANEL_SIZE_X_LARGE:
                 retval = "x-large";
 		break;
 	default:
@@ -401,14 +401,14 @@
 
 	xfce_rc_set_group (config, "xfapplet");
 
-	/* iid for bonobo control */
+	/* iid for matecomponent control */
 	xfce_rc_write_entry (config, "iid", xap->iid);
 
 	/* applet name (used in dialog messages) */
 	xfce_rc_write_entry (config, "name", xap->name);
 
-	/* gconf key for applet preferences */
-	xfce_rc_write_entry (config, "gconfkey", xap->gconf_key);
+	/* mateconf key for applet preferences */
+	xfce_rc_write_entry (config, "mateconfkey", xap->mateconf_key);
 
 	xfce_rc_close (config);
 
@@ -422,7 +422,7 @@
 	gchar		*path;
 	const gchar	*iid;
 	const gchar	*name;
-	const gchar	*gconf_key;
+	const gchar	*mateconf_key;
 
 	path = xfce_panel_plugin_lookup_rc_file (xap->plugin);
 	if (!path)
@@ -436,23 +436,23 @@
 
 	xfce_rc_set_group (config, "xfapplet");
 
-	/* iid for bonobo control */
+	/* iid for matecomponent control */
 	iid = xfce_rc_read_entry (config, "iid", NULL);
 
 	/* applet name (used in dialog messages) */
 	name = xfce_rc_read_entry (config, "name", NULL);
 
-	/* gconf key for applet preferences */
-	gconf_key = xfce_rc_read_entry (config, "gconfkey", NULL);
+	/* mateconf key for applet preferences */
+	mateconf_key = xfce_rc_read_entry (config, "mateconfkey", NULL);
 
-	if (!iid || !gconf_key || !name) {
+	if (!iid || !mateconf_key || !name) {
 		xfce_rc_close (config);
 		return FALSE;
 	}
 	
 	xap->iid = g_strdup (iid);
 	xap->name = g_strdup (name);
-	xap->gconf_key = g_strdup (gconf_key);
+	xap->mateconf_key = g_strdup (mateconf_key);
 
 	xfce_rc_close (config);
 
@@ -474,7 +474,7 @@
 	guint		 i;
 
 	info = xfce_about_info_new ("XfApplet", VERSION " (r" REVISION ")",
-				    _("Display Gnome applets on the Xfce4 Panel"),
+				    _("Display Mate applets on the Xfce4 Panel"),
 				    XFCE_COPYRIGHT_TEXT ("2006", "Adriano Winter Bess"), XFCE_LICENSE_GPL);
 	xfce_about_info_set_homepage (info, "http://xfce-goodies.berlios.de");
 	xfce_about_info_add_credit (info, "Adriano Winter Bess", "awbess@gmail.com", _("Author/Maintainer"));
@@ -500,13 +500,13 @@
 }
 
 static void
-xfapplet_menu_item_activated (BonoboUIComponent *uic, gpointer mi, const char *cname)
+xfapplet_menu_item_activated (MateComponentUIComponent *uic, gpointer mi, const char *cname)
 {
 	gtk_menu_item_activate (GTK_MENU_ITEM(mi));
 }
 
 static void
-xfapplet_setup_menu_items (XfcePanelPlugin *plugin, BonoboUIComponent *uic)
+xfapplet_setup_menu_items (XfcePanelPlugin *plugin, MateComponentUIComponent *uic)
 {
 	GtkWidget *menu;
 	GList     *list;
@@ -526,31 +526,31 @@
 	/* "Customize Panel" menu item */
 	data = g_list_nth_data (list, CUSTOMIZE_MENU_ITEM_ORDER);
 	if (GTK_IS_MENU_ITEM (data))
-		bonobo_ui_component_add_verb (uic, "CustomizePanel", xfapplet_menu_item_activated, data);
+		matecomponent_ui_component_add_verb (uic, "CustomizePanel", xfapplet_menu_item_activated, data);
 
 	/* "Add New Item" menu item */
 	data = g_list_nth_data (list, ADD_MENU_ITEM_ORDER);
 	if (GTK_IS_MENU_ITEM (data))
-		bonobo_ui_component_add_verb (uic, "Add", xfapplet_menu_item_activated, data);
+		matecomponent_ui_component_add_verb (uic, "Add", xfapplet_menu_item_activated, data);
 
 	/* "Remove" menu item */
 	data = g_list_nth_data (list, REMOVE_MENU_ITEM_ORDER);
 	if (GTK_IS_MENU_ITEM (data))
-		bonobo_ui_component_add_verb (uic, "Remove", xfapplet_menu_item_activated, data);
+		matecomponent_ui_component_add_verb (uic, "Remove", xfapplet_menu_item_activated, data);
 
 	/* "Move" menu item */
 	data = g_list_nth_data (list, MOVE_MENU_ITEM_ORDER);
 	if (GTK_IS_MENU_ITEM (data))
-		bonobo_ui_component_add_verb (uic, "Move", xfapplet_menu_item_activated, data);
+		matecomponent_ui_component_add_verb (uic, "Move", xfapplet_menu_item_activated, data);
 	/* "About" menu item */
 	data = g_list_nth_data (list, ABOUT_MENU_ITEM_ORDER);
 	if (GTK_IS_MENU_ITEM (data))
-		bonobo_ui_component_add_verb (uic, "About", xfapplet_menu_item_activated, data);
+		matecomponent_ui_component_add_verb (uic, "About", xfapplet_menu_item_activated, data);
 
 	/* "Properties" menu item */
 	data = g_list_nth_data (list, PROPERTIES_MENU_ITEM_ORDER);
 	if (GTK_IS_MENU_ITEM (data))
-		bonobo_ui_component_add_verb (uic, "Properties", xfapplet_menu_item_activated, data);
+		matecomponent_ui_component_add_verb (uic, "Properties", xfapplet_menu_item_activated, data);
 }
 
 static void
@@ -584,19 +584,19 @@
 }
 
 static void
-xfapplet_applet_activated (Bonobo_Unknown object, CORBA_Environment *ev, gpointer data)
+xfapplet_applet_activated (MateComponent_Unknown object, CORBA_Environment *ev, gpointer data)
 {
 	GtkWidget		*bw, *child = NULL;
 	CORBA_Object		 control;
 	CORBA_Environment	 corba_ev;
-	BonoboControlFrame	*frame;
-	BonoboUIComponent	*uic;
-	Bonobo_PropertyBag	 prop_bag;
+	MateComponentControlFrame	*frame;
+	MateComponentUIComponent	*uic;
+	MateComponent_PropertyBag	 prop_bag;
 	XfAppletPlugin		*xap = (XfAppletPlugin*) data;
 	gchar			*error;
 
-	if (BONOBO_EX (ev) || object == CORBA_OBJECT_NIL) {
-		error = bonobo_exception_get_text (ev);
+	if (MATECOMPONENT_EX (ev) || object == CORBA_OBJECT_NIL) {
+		error = matecomponent_exception_get_text (ev);
 		CORBA_exception_free (ev);
 		g_warning ("Failed to load applet '%s' (can't get CORBA object): %s\n", xap->iid, error);
 		xfapplet_applet_load_failed (xap);
@@ -606,16 +606,16 @@
 	}
 	
 	control = CORBA_Object_duplicate (object, NULL);
-	bw = bonobo_widget_new_control_from_objref (object, CORBA_OBJECT_NIL);
-	bonobo_object_release_unref (object, NULL);
+	bw = matecomponent_widget_new_control_from_objref (object, CORBA_OBJECT_NIL);
+	matecomponent_object_release_unref (object, NULL);
 	if (!bw) {
-		g_warning ("Failed to load applet '%s' (can't get bonobo widget)\n", xap->iid);
+		g_warning ("Failed to load applet '%s' (can't get matecomponent widget)\n", xap->iid);
 		xfapplet_applet_load_failed (xap);
 		xfapplet_cleanup_current (xap);
 		return;
 	}
 	
-	frame = bonobo_widget_get_control_frame (BONOBO_WIDGET (bw));
+	frame = matecomponent_widget_get_control_frame (MATECOMPONENT_WIDGET (bw));
 	if (!frame) {
 		g_warning ("Failed to load applet '%s' (can't get control frame)\n", xap->iid);
 		gtk_object_sink (GTK_OBJECT (bw));
@@ -625,9 +625,9 @@
 	}
 	
 	CORBA_exception_init (&corba_ev);
-	prop_bag = bonobo_control_frame_get_control_property_bag (frame, &corba_ev);
-	if (prop_bag == NULL || BONOBO_EX (&corba_ev)) {
-		error = bonobo_exception_get_text (&corba_ev);
+	prop_bag = matecomponent_control_frame_get_control_property_bag (frame, &corba_ev);
+	if (prop_bag == NULL || MATECOMPONENT_EX (&corba_ev)) {
+		error = matecomponent_exception_get_text (&corba_ev);
 		CORBA_exception_free (&corba_ev);
 		g_warning ("Failed to load applet '%s' (can't get property bag): %s\n", xap->iid, error);
 		gtk_object_sink (GTK_OBJECT (bw));
@@ -637,9 +637,9 @@
 		return;
 	}
 	
-        uic = bonobo_control_frame_get_popup_component (frame, &corba_ev);
-	if (uic == NULL || BONOBO_EX (&corba_ev)) {
-		error = bonobo_exception_get_text (&corba_ev);
+        uic = matecomponent_control_frame_get_popup_component (frame, &corba_ev);
+	if (uic == NULL || MATECOMPONENT_EX (&corba_ev)) {
+		error = matecomponent_exception_get_text (&corba_ev);
 		CORBA_exception_free (&corba_ev);
 		g_warning ("Failed to load applet '%s' (can't get popup component): %s\n", xap->iid, error);
 		gtk_object_sink (GTK_OBJECT (bw));
@@ -649,11 +649,11 @@
 		return;
 	}
 		
-	bonobo_ui_component_freeze (uic, CORBA_OBJECT_NIL);
+	matecomponent_ui_component_freeze (uic, CORBA_OBJECT_NIL);
 	xfce_textdomain ("xfce4-panel", LIBXFCE4PANEL_LOCALE_DIR, "UTF-8");
-	bonobo_ui_util_set_ui (uic, PKGDATADIR "/ui", "XFCE_Panel_Popup.xml", "xfce4-xfapplet-plugin", &corba_ev);
-	if (BONOBO_EX (&corba_ev)) {
-		error = bonobo_exception_get_text (&corba_ev);
+	matecomponent_ui_util_set_ui (uic, PKGDATADIR "/ui", "XFCE_Panel_Popup.xml", "xfce4-xfapplet-plugin", &corba_ev);
+	if (MATECOMPONENT_EX (&corba_ev)) {
+		error = matecomponent_exception_get_text (&corba_ev);
 		CORBA_exception_free (&corba_ev);
 		g_warning ("Failed to load applet '%s' (can't set ui): %s\n", xap->iid, error);
 		gtk_object_sink (GTK_OBJECT (bw));
@@ -664,7 +664,7 @@
 	}
 	xfce_textdomain (GETTEXT_PACKAGE, PACKAGE_LOCALE_DIR, "UTF-8");
 	xfapplet_setup_menu_items (xap->plugin, uic);
-	bonobo_ui_component_thaw (uic, CORBA_OBJECT_NIL);
+	matecomponent_ui_component_thaw (uic, CORBA_OBJECT_NIL);
 
 	gtk_widget_show (bw);
 
@@ -674,7 +674,7 @@
 	xap->object = control;
 	xap->uic = uic;
 	xap->prop_bag = prop_bag;
-	ORBit_small_listen_for_broken (object, G_CALLBACK (xfapplet_connection_broken), xap);
+	MateCORBA_small_listen_for_broken (object, G_CALLBACK (xfapplet_connection_broken), xap);
 
 	child = xfapplet_get_plugin_child (xap->plugin);
 	if (child)
@@ -697,7 +697,7 @@
 
 		/*
 		 * The following may not seem necessary, but indeed it is. If
-		 * the plugin holds a bonobo widget and it is not explicitely
+		 * the plugin holds a matecomponent widget and it is not explicitely
 		 * destroyed here, an "applet freeze" bug shows up. This bug can
 		 * be reproduced in the following steps:
 		 * 1. Add two xfapplets;
@@ -712,7 +712,7 @@
 
 	xfapplet_cleanup_current (xap);
 
-	xfapplet_cleanup_unused_gconf_keys ();
+	xfapplet_cleanup_unused_mateconf_keys ();
 
 	g_free (xap);
 }
@@ -724,7 +724,7 @@
 
 	/* We (still) do not support "background" and "locked_down" options. */
 	moniker = g_strdup_printf ("%s!prefs_key=%s/prefs;orient=%s;size=%s",
-				   xap->iid, xap->gconf_key,
+				   xap->iid, xap->mateconf_key,
 				   xfapplet_get_orient_string (xap->plugin),
 				   xfapplet_get_size_string (xap->plugin));
 
@@ -739,7 +739,7 @@
 
 	CORBA_exception_init (&ev);
 	moniker = xfapplet_construct_moniker (xap);
-	bonobo_get_object_async (moniker, "IDL:Bonobo/Control:1.0", &ev, xfapplet_applet_activated, xap);
+	matecomponent_get_object_async (moniker, "IDL:MateComponent/Control:1.0", &ev, xfapplet_applet_activated, xap);
 	g_free (moniker);
 }
 
@@ -793,9 +793,9 @@
 
 	xfce_textdomain (GETTEXT_PACKAGE, PACKAGE_LOCALE_DIR, "UTF-8");
 
-	bonobo_ui_init (argv[0], VERSION, &argc, argv);
+	matecomponent_ui_init (argv[0], VERSION, &argc, argv);
 
-	xfapplet_cleanup_unused_gconf_keys ();
+	xfapplet_cleanup_unused_mateconf_keys ();
 
 	xap = xfapplet_new (plugin);
 
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/xfapplet.desktop.in.in xfce4-xfapplet-plugin-0.1.0/panel-plugin/xfapplet.desktop.in.in
--- xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/xfapplet.desktop.in.in	2012-04-15 22:22:20.138523168 -0400
+++ xfce4-xfapplet-plugin-0.1.0/panel-plugin/xfapplet.desktop.in.in	2012-04-15 22:24:17.521854441 -0400
@@ -2,6 +2,6 @@
 Type=X-XFCE-PanelPlugin
 Encoding=UTF-8
 _Name=XfApplet
-_Comment=Display Gnome applets in the panel
+_Comment=Display Mate applets in the panel
 Icon=xfapplet1
 X-XFCE-Exec=@PLUGIN_PATH@/xfce4-xfapplet-plugin
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/xfapplet.h xfce4-xfapplet-plugin-0.1.0/panel-plugin/xfapplet.h
--- xfce4-xfapplet-plugin-0.1.0.orig/panel-plugin/xfapplet.h	2012-04-15 22:22:20.138523168 -0400
+++ xfce4-xfapplet-plugin-0.1.0/panel-plugin/xfapplet.h	2012-04-15 22:24:21.161854378 -0400
@@ -1,5 +1,5 @@
 /*
- *  xfce4-xfapplet-plugin - a gnome applet displaying plugin for xfce4 panel
+ *  xfce4-xfapplet-plugin - a mate applet displaying plugin for xfce4 panel
  *  Copyright (c) 2006 Adriano Winter Bess <awbess@gmail.com>
  *
  *  This program is free software; you can redistribute it and/or modify
@@ -20,21 +20,21 @@
 #define XFAPPLET_PLUGIN_H
 
 #include <gtk/gtk.h>
-#include <bonobo/bonobo-ui-component.h>
+#include <matecomponent/matecomponent-ui-component.h>
 #include <libxfce4panel/xfce-panel-plugin.h>
-#include <GNOME_Panel.h>
+#include <MATE_Panel.h>
 
-#define XFAPPLET_GCONF_DIR "/apps/xfapplet/"
+#define XFAPPLET_MATECONF_DIR "/apps/xfapplet/"
 
 typedef struct {
 	XfcePanelPlugin   	*plugin;
 	gboolean           	 configured;
 	gchar			*iid;
 	gchar			*name;
-	gchar             	*gconf_key;
+	gchar             	*mateconf_key;
 	CORBA_Object		 object;
-	BonoboUIComponent 	*uic;
-	Bonobo_PropertyBag	 prop_bag;
+	MateComponentUIComponent 	*uic;
+	MateComponent_PropertyBag	 prop_bag;
 } XfAppletPlugin;
 
 typedef struct {
diff -Nur xfce4-xfapplet-plugin-0.1.0.orig/README xfce4-xfapplet-plugin-0.1.0/README
--- xfce4-xfapplet-plugin-0.1.0.orig/README	2012-04-15 22:22:20.141856501 -0400
+++ xfce4-xfapplet-plugin-0.1.0/README	2012-04-15 22:24:17.078521116 -0400
@@ -3,8 +3,8 @@
 o WHAT IS IT?
 
 XfApplet is a plugin for the Xfce 4 panel. The plugin itself has no special
-functionallity, its only purpose is to enable one to use Gnome applets inside
-the Xfce 4 panel just as they are used inside the Gnome panel.
+functionallity, its only purpose is to enable one to use Mate applets inside
+the Xfce 4 panel just as they are used inside the Mate panel.
 
 XfApplet was written for the new version about to be released of the Xfce 4
 panel (4.4), although it should work perfectly with the development version of
@@ -23,12 +23,12 @@
 just an image) because no applet has been selected yet. Right click XfApplet and
 choose "Properties". You should get a dialog displaying all available applets in
 your machine. As you select one by either double-clicking it or clicking the OK
-button in the dialog, XfApplet will start displaying it just like the Gnome
+button in the dialog, XfApplet will start displaying it just like the Mate
 panel would do it.
 
 At any time you can change the applet being displayed by accessing the
 properties dialog again. You can add as many XfApplets to the panel as you want;
-each one of them is capable of displaying a single Gnome applet.
+each one of them is capable of displaying a single Mate applet.
 
 Notice that by right-clicking XfApplet after any applet has been loaded, you get
 not only Xfce 4 panel's pop menu items but also the items expected from the
@@ -36,16 +36,16 @@
 
 o KNOWN ISSUES
 
-  -> GConf Keys
+  -> MateConf Keys
   
 Due to some limitations in the Xfce 4 panel plugin API, there is no way for a
 plugin to know when it is definitelly being removed from the panel. As a
-consequence, XfApplet cannot remove the GConf keys created for the applets just
-like the Gnome panel does. After a long time adding and removing several
-XfApplets to the panel, you may get a lot of unused GConf entries. XfApplet can
+consequence, XfApplet cannot remove the MateConf keys created for the applets just
+like the Mate panel does. After a long time adding and removing several
+XfApplets to the panel, you may get a lot of unused MateConf entries. XfApplet can
 give you some help removing them provided that you help it too ;)
 
-All GConf keys created for the applets have the following form:
+All MateConf keys created for the applets have the following form:
 
 	/apps/xfapplet/applet_%d
 
@@ -61,10 +61,10 @@
 	prefs: directory, this is optional and created by the applet to store
 	  its preferences.
 
-So, as stated above, to have any XfApplet GConf key erased is just a matter of
+So, as stated above, to have any XfApplet MateConf key erased is just a matter of
 unchecking /apps/xfapplet/applet_%d/in_use. Of course you are free to use any
 other appropriate methods you prefer to remove the keys (like manually editing
-your GConf xml file).
+your MateConf xml file).
 
   -> Tasklist applet and Systray applet (and maybe others)
 
